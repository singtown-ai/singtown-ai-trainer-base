name: Build and Push Docker Image to ACR

on:
  push:
    tags:
      - "v*"

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      ACR_REGISTRY: registry.cn-shenzhen.aliyuncs.com
      ACR_IMAGE: registry.cn-shenzhen.aliyuncs.com/${{ github.repository }}:${{ github.ref_name }}
      GHCR_IMAGE: ghcr.io/${{ github.repository }}:${{ github.ref_name }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_PASSWORD }}

      - name: Log in to ACR
        uses: docker/login-action@v2
        with:
          registry: ${{ env.ACR_REGISTRY }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push arm64 Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/arm64
          push: false
          tags: ${{ env.GHCR_IMAGE }}-arm64,${{ env.ACR_IMAGE }}-arm64

      - name: Clean up Docker Buildx builders
        run: docker buildx prune --filter type=exec.cache -f

      - name: Build and push amd64 Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: false
          tags: ${{ env.GHCR_IMAGE }}-amd64,${{ env.ACR_IMAGE }}-amd64

      - name: Clean up Docker Buildx builders
        run: docker buildx prune --filter type=exec.cache -f

      - name: Create and push multi-architecture manifest
        run: |
          docker buildx imagetools create -t ${{ env.GHCR_IMAGE }} ${{ env.GHCR_IMAGE }}-amd64 ${{ env.GHCR_IMAGE }}-arm64
          docker push ${{ env.GHCR_IMAGE }}
          docker buildx imagetools create -t ${{ env.ACR_IMAGE }} ${{ env.ACR_IMAGE }}-amd64 ${{ env.ACR_IMAGE }}-arm64
          docker push ${{ env.ACR_IMAGE }}